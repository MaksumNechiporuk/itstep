  main.cpp
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility(3520): error C2678: binary '==': no operator found which takes a left-hand operand of type 'std::pair<const _Kty,_Ty>' (or there is no acceptable conversion)
          with
          [
              _Kty=std::string,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\exception(331): note: could be 'bool std::operator ==(const std::exception_ptr &,std::nullptr_t) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\exception(326): note: or       'bool std::operator ==(std::nullptr_t,const std::exception_ptr &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\exception(321): note: or       'bool std::operator ==(const std::exception_ptr &,const std::exception_ptr &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\system_error(266): note: or       'bool std::operator ==(const std::error_code &,const std::error_code &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\system_error(272): note: or       'bool std::operator ==(const std::error_code &,const std::error_condition &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\system_error(278): note: or       'bool std::operator ==(const std::error_condition &,const std::error_code &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\system_error(284): note: or       'bool std::operator ==(const std::error_condition &,const std::error_condition &) noexcept' [found using argument-dependent lookup]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility(3520): note: while trying to match the argument list '(std::pair<const _Kty,_Ty>, const _Ty)'
          with
          [
              _Kty=std::string,
              _Ty=int
          ]
          and
          [
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility(3533): note: see reference to function template instantiation '_InIt std::_Find_unchecked1<_InIt,_Ty>(_InIt,const _InIt,const _Ty &,std::false_type)' being compiled
          with
          [
              _InIt=std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const std::string,int>>>>,
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility(3542): note: see reference to function template instantiation '_InIt std::_Find_unchecked<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>(const _InIt,const _InIt,const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _InIt=std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const std::string,int>>>>,
              _Ty=std::pair<const std::string,int>
          ]
  e:\шаг\програмування\с++ ооп\chainofresponcibility\chainofresponcibility\main.cpp(55): note: see reference to function template instantiation '_InIt std::find<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,std::string>(_InIt,const _InIt,const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _InIt=std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const std::string,int>>>>,
              _Ty=std::pair<const std::string,int>
          ]
